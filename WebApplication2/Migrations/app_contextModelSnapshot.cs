// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalTrainerApp.Data;

namespace PersonalTrainerApp.Migrations
{
    [DbContext(typeof(app_context))]
    partial class app_contextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MuscleTraining_Program", b =>
                {
                    b.Property<int>("musclesid")
                        .HasColumnType("int");

                    b.Property<int>("training_Programsid")
                        .HasColumnType("int");

                    b.HasKey("musclesid", "training_Programsid");

                    b.HasIndex("training_Programsid");

                    b.ToTable("MuscleTraining_Program");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hebrewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Exercise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HebrewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("max_whight")
                        .HasColumnType("float");

                    b.Property<double>("min_whight")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Exercise_Muscle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("exerciseId")
                        .HasColumnType("int");

                    b.Property<int>("muscleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("exerciseId");

                    b.HasIndex("muscleId");

                    b.ToTable("Exercise_Muscle");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Exercise_Trainee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("exerciseId")
                        .HasColumnType("int");

                    b.Property<double>("max_wight")
                        .HasColumnType("float");

                    b.Property<double>("parameter1")
                        .HasColumnType("float");

                    b.Property<double>("parameter2")
                        .HasColumnType("float");

                    b.Property<int>("repets")
                        .HasColumnType("int");

                    b.Property<int?>("reviewid")
                        .HasColumnType("int");

                    b.Property<double>("rpg")
                        .HasColumnType("float");

                    b.Property<int?>("scoreid")
                        .HasColumnType("int");

                    b.Property<int>("trainingId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("exerciseId");

                    b.HasIndex("reviewid");

                    b.HasIndex("scoreid");

                    b.HasIndex("trainingId");

                    b.ToTable("Exercise_Trainee");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Muscle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HebrewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.ToTable("Muscles");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Performance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("img_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("traineeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("traineeId");

                    b.ToTable("Performance");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Review", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("coach_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trainee_note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Preformence");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Score", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("coach_score")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("trainee_score")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Training", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("coachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("reviewid")
                        .HasColumnType("int");

                    b.Property<int?>("scoreid")
                        .HasColumnType("int");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<int>("training_programId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("coachId");

                    b.HasIndex("reviewid");

                    b.HasIndex("scoreid");

                    b.HasIndex("training_programId");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Training_Program", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("traineeId")
                        .HasColumnType("int");

                    b.Property<int>("trainings_duration")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("traineeId");

                    b.ToTable("Training_Program");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Coach", b =>
                {
                    b.HasBaseType("PersonalTrainerApp.Models.User");

                    b.HasDiscriminator().HasValue("Coach");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Trainee", b =>
                {
                    b.HasBaseType("PersonalTrainerApp.Models.User");

                    b.Property<int?>("reviewid")
                        .HasColumnType("int");

                    b.Property<DateTime>("subscribe_date")
                        .HasColumnType("datetime2");

                    b.HasIndex("reviewid");

                    b.HasDiscriminator().HasValue("Trainee");
                });

            modelBuilder.Entity("MuscleTraining_Program", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Muscle", null)
                        .WithMany()
                        .HasForeignKey("musclesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalTrainerApp.Models.Training_Program", null)
                        .WithMany()
                        .HasForeignKey("training_Programsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Exercise_Muscle", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Exercise", "exercise")
                        .WithMany("exerciseMuscles")
                        .HasForeignKey("exerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalTrainerApp.Models.Muscle", "muscle")
                        .WithMany("exerciseMuscles")
                        .HasForeignKey("muscleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("exercise");

                    b.Navigation("muscle");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Exercise_Trainee", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Exercise", "exercise")
                        .WithMany("exercise_Trainees")
                        .HasForeignKey("exerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalTrainerApp.Models.Review", "review")
                        .WithMany()
                        .HasForeignKey("reviewid");

                    b.HasOne("PersonalTrainerApp.Models.Score", "score")
                        .WithMany()
                        .HasForeignKey("scoreid");

                    b.HasOne("PersonalTrainerApp.Models.Training", "training")
                        .WithMany("exercise_trainees")
                        .HasForeignKey("trainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("exercise");

                    b.Navigation("review");

                    b.Navigation("score");

                    b.Navigation("training");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Muscle", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Category", "category")
                        .WithMany("muscles")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Performance", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Trainee", "trainee")
                        .WithMany("performances")
                        .HasForeignKey("traineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("trainee");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Training", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Coach", "coach")
                        .WithMany("trainings")
                        .HasForeignKey("coachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalTrainerApp.Models.Review", "review")
                        .WithMany()
                        .HasForeignKey("reviewid");

                    b.HasOne("PersonalTrainerApp.Models.Score", "score")
                        .WithMany()
                        .HasForeignKey("scoreid");

                    b.HasOne("PersonalTrainerApp.Models.Training_Program", "training_program")
                        .WithMany("trainings")
                        .HasForeignKey("training_programId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("coach");

                    b.Navigation("review");

                    b.Navigation("score");

                    b.Navigation("training_program");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Training_Program", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Trainee", "trainee")
                        .WithMany("training_Programs")
                        .HasForeignKey("traineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("trainee");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Trainee", b =>
                {
                    b.HasOne("PersonalTrainerApp.Models.Review", "review")
                        .WithMany()
                        .HasForeignKey("reviewid");

                    b.Navigation("review");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Category", b =>
                {
                    b.Navigation("muscles");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Exercise", b =>
                {
                    b.Navigation("exercise_Trainees");

                    b.Navigation("exerciseMuscles");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Muscle", b =>
                {
                    b.Navigation("exerciseMuscles");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Training", b =>
                {
                    b.Navigation("exercise_trainees");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Training_Program", b =>
                {
                    b.Navigation("trainings");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Coach", b =>
                {
                    b.Navigation("trainings");
                });

            modelBuilder.Entity("PersonalTrainerApp.Models.Trainee", b =>
                {
                    b.Navigation("performances");

                    b.Navigation("training_Programs");
                });
#pragma warning restore 612, 618
        }
    }
}
